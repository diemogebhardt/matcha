---
source: src/renderer.rs
expression: "{> fn full_name(names: List(String))\n{% for name in names %}{{ name }},{% endfor %}\"\n{> endfn\nHello {[ names(\"Gleam\") ]}"
snapshot_kind: text
---
// DO NOT EDIT: Code generated by matcha from -test-

import gleam/string_tree.{type StringTree}
import gleam/list

fn full_name(names: List(String)) -> StringTree {
    let tree = string_tree.from_string("")
    let tree = list.fold(names, tree, fn(tree, name) {
            let tree = string_tree.append(tree, name)
    let tree = string_tree.append(tree, ",")

        tree
})
    let tree = string_tree.append(tree, "\"")

    tree
}

pub fn render_tree() -> StringTree {
    let tree = string_tree.from_string("")
    let tree = string_tree.append(tree, "Hello ")
    let tree = string_tree.append_tree(tree, names("Gleam"))

    tree
}

pub fn render() -> String {
    string_tree.to_string(render_tree())
}
