---
source: src/renderer.rs
expression: "{> with list as List(Item)\nHello,{% for item as Item in list %} to {{ item }} and {% endfor %} everyone else"
snapshot_kind: text
---
// DO NOT EDIT: Code generated by matcha from -test-

import gleam/string_tree.{type StringTree}
import gleam/list



pub fn render_tree(list list: List(Item)) -> StringTree {
    let builder = string_tree.from_string("")
    let builder = string_tree.append(builder, "Hello,")
    let builder = list.fold(list, builder, fn(builder, item: Item) {
            let builder = string_tree.append(builder, " to ")
    let builder = string_tree.append(builder, item)
    let builder = string_tree.append(builder, " and ")

        builder
})
    let builder = string_tree.append(builder, " everyone else")

    builder
}

pub fn render(list list: List(Item)) -> String {
    string_tree.to_string(render_tree(list: list))
}
