---
source: src/renderer.rs
expression: "{> with my_list as List(String)\n<ul>\n{% for entry in my_list %}\n    <li>{{ entry }}</li>\n{% endfor %}\n</ul>"
snapshot_kind: text
---
// DO NOT EDIT: Code generated by matcha from -test-

import gleam/string_tree.{type StringTree}
import gleam/list



pub fn render_tree(my_list my_list: List(String)) -> StringTree {
    let builder = string_tree.from_string("")
    let builder = string_tree.append(builder, "<ul>
")
    let builder = list.fold(my_list, builder, fn(builder, entry) {
            let builder = string_tree.append(builder, "
    <li>")
    let builder = string_tree.append(builder, entry)
    let builder = string_tree.append(builder, "</li>
")

        builder
})
    let builder = string_tree.append(builder, "
</ul>")

    builder
}

pub fn render(my_list my_list: List(String)) -> String {
    string_tree.to_string(render_tree(my_list: my_list))
}
