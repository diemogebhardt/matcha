---
source: src/renderer.rs
expression: "{> with list as List(String)\nHello,{% for item in list %} to {{ item }} and {% endfor %} everyone else"
---
// DO NOT EDIT: Code generated by matcha from -test-

import gleam/string_builder.{type StringBuilder}
import gleam/list



pub fn render_builder(list list: List(String)) -> StringBuilder {
    let builder = string_builder.from_string("")
    let builder = string_builder.append(builder, "Hello,")
    let builder = list.fold(list, builder, fn(builder, item) {
            let builder = string_builder.append(builder, " to ")
    let builder = string_builder.append(builder, item)
    let builder = string_builder.append(builder, " and ")

        builder
})
    let builder = string_builder.append(builder, " everyone else")

    builder
}

pub fn render(list list: List(String)) -> String {
    string_builder.to_string(render_builder(list: list))
}


